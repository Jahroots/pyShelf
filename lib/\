#!/usr/bin/python
import os
import zipfile
from http.server import HTTPServer, BaseHTTPRequestHandler
from config import Config
from lib.library import Catalogue
from lib.storage import Storage
config = Config()
Storage = Storage()


class InitFiles:
    """First run file creation operations"""
    def __init__(self, file_array):
        print("Begining creation of file structure")
        for _pointer in file_array:
            if not os.path.isfile(_pointer):
                self.CreateFile(_pointer)

    def CreateFile(self, _pointer):
        """Create the file"""
        if not os.path.isdir(os.path.split(_pointer)[0]):
            os.mkdir(os.path.split(_pointer)[0])
            f = open(_pointer, "w+")
        f.close()


class BookServer:
    """HTTP Frontend"""
    def __init__(self):
        self.server_address = ('', 8000)
        self.handler = 'BaseHTTPRequestHandler'

    def close_prompt(self):
        close = input("Close Server? y/n")
        if close == 'y':
            self.close()
            return True
        else:
            self.close_prompt()

    def run(self):
        self.httpd = HTTPServer(self.server_address, self.handler)
        try:
            self.httpd.serve_forever()
            self.httpd.handle_request()
            if self.close_prompt() == True:
                pass
        except Exception:
            self.close()
            return False

    def close(self):
        try:
            self.httpd.server_close()
            return True
        except Exception:
            return False

