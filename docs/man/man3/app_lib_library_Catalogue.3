.TH "app.lib.library.Catalogue" 3 "Sun Nov 10 2019" "Version 0.1.0" "pyShelf Open Source Ebook Server" \" -*- nroff -*-
.ad l
.nh
.SH NAME
app.lib.library.Catalogue
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP (self)"
.br
.ti -1c
.RI "def \fBscan_folder\fP (self, folder=config\&.book_path)"
.br
.ti -1c
.RI "def \fBscan_book\fP (self, book)"
.br
.ti -1c
.RI "def \fBfilter_books\fP (self)"
.br
.ti -1c
.RI "def \fBprocess_book\fP (self, book)"
.br
.ti -1c
.RI "def \fBextract_metadata\fP (self, book)"
.br
.ti -1c
.RI "def \fBextract_content\fP (self, book_zip, book)"
.br
.ti -1c
.RI "def \fBextract_cover_html\fP (self, book_zip, book)"
.br
.ti -1c
.RI "def \fBextract_cover_image\fP (self, book_zip, book)"
.br
.ti -1c
.RI "def \fBcompare_shelf_current\fP (self)"
.br
.ti -1c
.RI "def \fBimport_books\fP (self, list=None)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBfile_list\fP"
.br
.ti -1c
.RI "\fBopf_regx\fP"
.br
.ti -1c
.RI "\fBcover_regx\fP"
.br
.ti -1c
.RI "\fBhtml_regx\fP"
.br
.ti -1c
.RI "\fBbooks\fP"
.br
.in -1c
.SH "Detailed Description"
.PP

.PP
.nf
Decodes and stores book information
.fi
.PP
.PP
.nf
Step One: filter_books.fi
.PP

.SH "Member Function Documentation"
.PP
.SS "def app\&.lib\&.library\&.Catalogue\&.extract_metadata ( self,  book)"

.PP
.nf
Return extracted metadata and cover picture
book['path'] == Full path to ebook file
book['files'] == list of files from self.process_book(book)

.fi
.PP

.SS "def app\&.lib\&.library\&.Catalogue\&.filter_books ( self)"

.PP
.nf
    Scan book folder recursively for epub files
    filter_books(0) -> Catalogue.books
    filter_books(1) -> self.books[]
    :param ret: 0 -> create class property -> dump json
    :param ret: 1 -> create & return class property

.fi
.PP

.SS "def app\&.lib\&.library\&.Catalogue\&.process_book ( self,  book)"

.PP
.nf
Return dictionary of epub file contents
.fi
.PP

.SS "def app\&.lib\&.library\&.Catalogue\&.scan_book ( self,  book)"

.PP
.nf
REMOVE ME?
.fi
.PP


.SH "Author"
.PP
Generated automatically by Doxygen for pyShelf Open Source Ebook Server from the source code\&.
